(1) Create three files to submit.
- Playlist.h - Class declaration
- Playlist.cpp - Class definition
- main.cpp - main() function
Build the PlaylistNode class per the following specifications. 
Note: Some functions can initially be function stubs (empty functions), 
to be completed in later steps.

(2) In main(), prompt the user for the title of the playlist.

(3) Implement the PrintMenu() function. 
PrintMenu() takes the playlist title as a parameter and outputs a 
menu of options to manipulate the playlist. Each option is represented 
by a single character. Build and output the menu within the function.

If an invalid character is entered, continue to prompt for a valid choice. 
Hint: Implement Quit before implementing other options. Call PrintMenu() 
in the main() function. Continue to execute the menu until the user enters 
q to Quit. 

(4) Implement "Output full playlist" menu option. 
If the list is empty, output: Playlist is empty

(5) Implement the "Add song" menu item. 
New additions are added to the end of the list.

(6) Implement the "Remove song" function. 
Prompt the user for the unique ID of the song to be removed.

(7) Implement the "Change position of song" menu option. 
Prompt the user for the current position of the song and the desired new position. 
Valid new positions are 1 - n (the number of nodes). If the user enters a new position that is less than 1, 
move the node to the position 1 (the head). If the user enters a new position greater than n, move the node to position n (the tail). 

(8) Implement the "Output songs by specific artist" menu option. 
Prompt the user for the artist's name, and output the node's information, 
starting with the node's current position.

(9) Implement the "Output total time of playlist" menu option. 
Output the sum of the time of the playlist's songs (in seconds).
